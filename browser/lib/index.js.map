{"version":3,"sources":["../../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKqB,qB;;;;;;;;;;;AACjB,mCAAY,gBAAZ,EAA8B,QAA9B,EAAwC;AAAA;;AAAA,6GAC9B,QAD8B;;AAEpC,cAAK,gBAAL,GAAwB,gBAAxB;AAFoC;AAGvC;;;;;;;iCAEM,M,EAAQ;AAAA;;AACX,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,uBAAK,gBAAL,CAAsB,GAAtB,CAA0B,OAAO,KAAjC,EAAwC,OAAO,OAA/C,EAAwD;AACpD,yBAAK,OAAO,GADwC;AAEpD,8BAAU,OAAO,QAFmC;AAGpD,2BAAO,OAAO;AAHsC,iBAAxD,EAIG,UAAC,GAAD,EAAS;AACR,wBAAI,GAAJ,EAAS;AACL,+BAAO,OAAO,GAAP,CAAP;AACH;;AAED;AACH,iBAVD;AAWH,aAZM,CAAP;AAaH;;;;;;kBApBgB,qB","file":"index.js","sourcesContent":["import AbstractHandler from 'nightingale-handler';\n\n/**\n * @param {int} minLevel\n */\nexport default class WinstonAdapterHandler extends AbstractHandler {\n    constructor(winstonTransport, minLevel) {\n        super(minLevel);\n        this.winstonTransport = winstonTransport;\n    }\n\n    handle(record) {\n        return new Promise((resolve, reject) => {\n            this.winstonTransport.log(record.level, record.message, {\n                key: record.key,\n                metadata: record.metadata,\n                extra: record.extra,\n            }, (err) => {\n                if (err) {\n                    return reject(err);\n                }\n\n                resolve();\n            });\n        });\n    }\n}\n"]}